// Code generated by protoc-gen-go.
// source: service.proto
// DO NOT EDIT!

/*
Package readinglist is a generated protocol buffer package.

It is generated from these files:
	service.proto

It has these top-level messages:
	PutLinkRequest
	GetListLimitRequest
	Link
	LinkRequest
	Links
	Message
*/
package readinglist

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PutLinkRequest struct {
	// The Link to save
	Request *LinkRequest `protobuf:"bytes,1,opt,name=request" json:"request,omitempty"`
}

func (m *PutLinkRequest) Reset()                    { *m = PutLinkRequest{} }
func (m *PutLinkRequest) String() string            { return proto.CompactTextString(m) }
func (*PutLinkRequest) ProtoMessage()               {}
func (*PutLinkRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PutLinkRequest) GetRequest() *LinkRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type GetListLimitRequest struct {
	// The limit of links to fetch
	Limit int32 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
}

func (m *GetListLimitRequest) Reset()                    { *m = GetListLimitRequest{} }
func (m *GetListLimitRequest) String() string            { return proto.CompactTextString(m) }
func (*GetListLimitRequest) ProtoMessage()               {}
func (*GetListLimitRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetListLimitRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type Link struct {
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *Link) Reset()                    { *m = Link{} }
func (m *Link) String() string            { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()               {}
func (*Link) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Link) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type LinkRequest struct {
	// True to remove this link from the user's list.
	Delete bool  `protobuf:"varint,1,opt,name=delete" json:"delete,omitempty"`
	Link   *Link `protobuf:"bytes,2,opt,name=link" json:"link,omitempty"`
}

func (m *LinkRequest) Reset()                    { *m = LinkRequest{} }
func (m *LinkRequest) String() string            { return proto.CompactTextString(m) }
func (*LinkRequest) ProtoMessage()               {}
func (*LinkRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LinkRequest) GetDelete() bool {
	if m != nil {
		return m.Delete
	}
	return false
}

func (m *LinkRequest) GetLink() *Link {
	if m != nil {
		return m.Link
	}
	return nil
}

type Links struct {
	Links []*Link `protobuf:"bytes,1,rep,name=links" json:"links,omitempty"`
}

func (m *Links) Reset()                    { *m = Links{} }
func (m *Links) String() string            { return proto.CompactTextString(m) }
func (*Links) ProtoMessage()               {}
func (*Links) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Links) GetLinks() []*Link {
	if m != nil {
		return m.Links
	}
	return nil
}

type Message struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Message) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*PutLinkRequest)(nil), "readinglist.PutLinkRequest")
	proto.RegisterType((*GetListLimitRequest)(nil), "readinglist.GetListLimitRequest")
	proto.RegisterType((*Link)(nil), "readinglist.Link")
	proto.RegisterType((*LinkRequest)(nil), "readinglist.LinkRequest")
	proto.RegisterType((*Links)(nil), "readinglist.Links")
	proto.RegisterType((*Message)(nil), "readinglist.Message")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ReadingListService service

type ReadingListServiceClient interface {
	// Save a link via JSON or Protobuf
	PutLink(ctx context.Context, in *PutLinkRequest, opts ...grpc.CallOption) (*Message, error)
	// Get your links via JSON or Protobuf
	GetListLimit(ctx context.Context, in *GetListLimitRequest, opts ...grpc.CallOption) (*Links, error)
}

type readingListServiceClient struct {
	cc *grpc.ClientConn
}

func NewReadingListServiceClient(cc *grpc.ClientConn) ReadingListServiceClient {
	return &readingListServiceClient{cc}
}

func (c *readingListServiceClient) PutLink(ctx context.Context, in *PutLinkRequest, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := grpc.Invoke(ctx, "/readinglist.ReadingListService/PutLink", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *readingListServiceClient) GetListLimit(ctx context.Context, in *GetListLimitRequest, opts ...grpc.CallOption) (*Links, error) {
	out := new(Links)
	err := grpc.Invoke(ctx, "/readinglist.ReadingListService/GetListLimit", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ReadingListService service

type ReadingListServiceServer interface {
	// Save a link via JSON or Protobuf
	PutLink(context.Context, *PutLinkRequest) (*Message, error)
	// Get your links via JSON or Protobuf
	GetListLimit(context.Context, *GetListLimitRequest) (*Links, error)
}

func RegisterReadingListServiceServer(s *grpc.Server, srv ReadingListServiceServer) {
	s.RegisterService(&_ReadingListService_serviceDesc, srv)
}

func _ReadingListService_PutLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutLinkRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReadingListServiceServer).PutLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/readinglist.ReadingListService/PutLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReadingListServiceServer).PutLink(ctx, req.(*PutLinkRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReadingListService_GetListLimit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListLimitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReadingListServiceServer).GetListLimit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/readinglist.ReadingListService/GetListLimit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReadingListServiceServer).GetListLimit(ctx, req.(*GetListLimitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReadingListService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "readinglist.ReadingListService",
	HandlerType: (*ReadingListServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutLink",
			Handler:    _ReadingListService_PutLink_Handler,
		},
		{
			MethodName: "GetListLimit",
			Handler:    _ReadingListService_GetListLimit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

func init() { proto.RegisterFile("service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 331 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x52, 0xc1, 0x4a, 0xeb, 0x40,
	0x14, 0x25, 0x6d, 0xd3, 0xbc, 0x77, 0x6b, 0xb5, 0x5e, 0x6b, 0x09, 0xd1, 0x45, 0x19, 0x11, 0x05,
	0xa1, 0x91, 0xba, 0x73, 0x2d, 0xb8, 0x89, 0x20, 0xd1, 0x9d, 0xab, 0x68, 0x2f, 0x61, 0x68, 0x3a,
	0xa9, 0x99, 0x89, 0x1b, 0x71, 0xe3, 0x2f, 0xf8, 0x51, 0x7e, 0x80, 0xbf, 0xe0, 0x87, 0xc8, 0xcc,
	0x24, 0x90, 0xd0, 0xee, 0xee, 0xc9, 0x39, 0x73, 0xe6, 0xdc, 0x93, 0x81, 0xa1, 0xa4, 0xe2, 0x8d,
	0xbf, 0xd0, 0x6c, 0x5d, 0xe4, 0x2a, 0xc7, 0x41, 0x41, 0xc9, 0x82, 0x8b, 0x34, 0xe3, 0x52, 0x05,
	0xc7, 0x69, 0x9e, 0xa7, 0x19, 0x85, 0xc9, 0x9a, 0x87, 0x89, 0x10, 0xb9, 0x4a, 0x14, 0xcf, 0x85,
	0xb4, 0x52, 0x76, 0x03, 0xbb, 0xf7, 0xa5, 0x8a, 0xb8, 0x58, 0xc6, 0xf4, 0x5a, 0x92, 0x54, 0x38,
	0x07, 0xaf, 0xb0, 0xa3, 0xef, 0x4c, 0x9d, 0xf3, 0xc1, 0xdc, 0x9f, 0x35, 0xec, 0x66, 0x0d, 0x69,
	0x5c, 0x0b, 0xd9, 0x05, 0x1c, 0xdc, 0x92, 0x8a, 0xb8, 0x54, 0x11, 0x5f, 0x71, 0x55, 0x5b, 0x8d,
	0xc1, 0xcd, 0x34, 0x36, 0x46, 0x6e, 0x6c, 0x01, 0xf3, 0xa1, 0xa7, 0x4d, 0x70, 0x04, 0xdd, 0xb2,
	0xc8, 0x0c, 0xf7, 0x3f, 0xd6, 0x23, 0x8b, 0x60, 0xd0, 0x4c, 0x32, 0x81, 0xfe, 0x82, 0x32, 0x52,
	0x64, 0x34, 0xff, 0xe2, 0x0a, 0xe1, 0x29, 0xf4, 0x32, 0x2e, 0x96, 0x7e, 0xc7, 0xc4, 0xdb, 0xdf,
	0x8c, 0x67, 0x68, 0x76, 0x09, 0xae, 0x46, 0x12, 0xcf, 0x74, 0x0c, 0xb1, 0x94, 0xbe, 0x33, 0xed,
	0x6e, 0x3f, 0x60, 0x79, 0x76, 0x02, 0xde, 0x1d, 0x49, 0x99, 0xa4, 0x84, 0x3e, 0x78, 0x2b, 0x3b,
	0x56, 0x01, 0x6b, 0x38, 0xff, 0x76, 0x00, 0x63, 0x6b, 0xa0, 0x17, 0x7e, 0xb0, 0xcd, 0xe3, 0x23,
	0x78, 0x55, 0x91, 0x78, 0xd4, 0xba, 0xa0, 0x5d, 0x6f, 0x30, 0x6e, 0x91, 0xd5, 0x75, 0x6c, 0xf2,
	0xf9, 0xf3, 0xfb, 0xd5, 0x19, 0x05, 0x6e, 0xa8, 0x93, 0x5c, 0xd7, 0xc5, 0xe2, 0x13, 0xec, 0x34,
	0x8b, 0xc5, 0x69, 0xeb, 0xf4, 0x96, 0xce, 0x03, 0xdc, 0xd8, 0x4e, 0xb2, 0x43, 0xe3, 0xbe, 0x87,
	0xc3, 0x50, 0x7f, 0x0c, 0xdf, 0xcd, 0x7f, 0xf8, 0x78, 0xee, 0x9b, 0x27, 0x70, 0xf5, 0x17, 0x00,
	0x00, 0xff, 0xff, 0x2a, 0x51, 0x19, 0x75, 0x3e, 0x02, 0x00, 0x00,
}

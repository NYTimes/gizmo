// Code generated by protoc-gen-go.
// source: examples/nyt/mostpopular.proto
// DO NOT EDIT!

/*
Package nyt is a generated protocol buffer package.

It is generated from these files:
	examples/nyt/mostpopular.proto
	examples/nyt/semanticconcept.proto

It has these top-level messages:
	MostPopularResponse
	MostPopularResult
	Media
	MediaMetadata
	SemanticConceptResponse
	SemanticConceptResult
	SemanticConceptArticleList
	SemanticConceptArticle
*/
package nyt

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MostPopularResponse struct {
	Status     string               `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Copyright  string               `protobuf:"bytes,2,opt,name=copyright" json:"copyright,omitempty"`
	NumResults uint32               `protobuf:"varint,3,opt,name=num_results" json:"num_results,omitempty"`
	Results    []*MostPopularResult `protobuf:"bytes,4,rep,name=results" json:"results,omitempty"`
}

func (m *MostPopularResponse) Reset()                    { *m = MostPopularResponse{} }
func (m *MostPopularResponse) String() string            { return proto.CompactTextString(m) }
func (*MostPopularResponse) ProtoMessage()               {}
func (*MostPopularResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MostPopularResponse) GetResults() []*MostPopularResult {
	if m != nil {
		return m.Results
	}
	return nil
}

type MostPopularResult struct {
	Url           string   `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Id            uint64   `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	AsssetId      uint64   `protobuf:"varint,3,opt,name=assset_id" json:"assset_id,omitempty"`
	AdxKeywords   string   `protobuf:"bytes,4,opt,name=adx_keywords" json:"adx_keywords,omitempty"`
	Column        string   `protobuf:"bytes,5,opt,name=column" json:"column,omitempty"`
	Section       string   `protobuf:"bytes,6,opt,name=section" json:"section,omitempty"`
	Byline        string   `protobuf:"bytes,7,opt,name=byline" json:"byline,omitempty"`
	Type          string   `protobuf:"bytes,8,opt,name=type" json:"type,omitempty"`
	Title         string   `protobuf:"bytes,9,opt,name=title" json:"title,omitempty"`
	Abstract      string   `protobuf:"bytes,10,opt,name=abstract" json:"abstract,omitempty"`
	PublishedDate string   `protobuf:"bytes,11,opt,name=published_date" json:"published_date,omitempty"`
	Source        string   `protobuf:"bytes,12,opt,name=source" json:"source,omitempty"`
	Views         uint32   `protobuf:"varint,13,opt,name=views" json:"views,omitempty"`
	Media         []*Media `protobuf:"bytes,14,rep,name=media" json:"media,omitempty"`
}

func (m *MostPopularResult) Reset()                    { *m = MostPopularResult{} }
func (m *MostPopularResult) String() string            { return proto.CompactTextString(m) }
func (*MostPopularResult) ProtoMessage()               {}
func (*MostPopularResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MostPopularResult) GetMedia() []*Media {
	if m != nil {
		return m.Media
	}
	return nil
}

type Media struct {
	Type          string           `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	Subtype       string           `protobuf:"bytes,2,opt,name=subtype" json:"subtype,omitempty"`
	Caption       string           `protobuf:"bytes,3,opt,name=caption" json:"caption,omitempty"`
	Copyright     string           `protobuf:"bytes,4,opt,name=copyright" json:"copyright,omitempty"`
	MediaMetadata []*MediaMetadata `protobuf:"bytes,5,rep,name=media_metadata" json:"media_metadata,omitempty"`
}

func (m *Media) Reset()                    { *m = Media{} }
func (m *Media) String() string            { return proto.CompactTextString(m) }
func (*Media) ProtoMessage()               {}
func (*Media) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Media) GetMediaMetadata() []*MediaMetadata {
	if m != nil {
		return m.MediaMetadata
	}
	return nil
}

type MediaMetadata struct {
	Url    string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	Format string `protobuf:"bytes,2,opt,name=format" json:"format,omitempty"`
	Height uint32 `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Width  uint32 `protobuf:"varint,4,opt,name=width" json:"width,omitempty"`
}

func (m *MediaMetadata) Reset()                    { *m = MediaMetadata{} }
func (m *MediaMetadata) String() string            { return proto.CompactTextString(m) }
func (*MediaMetadata) ProtoMessage()               {}
func (*MediaMetadata) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func init() {
	proto.RegisterType((*MostPopularResponse)(nil), "nyt.MostPopularResponse")
	proto.RegisterType((*MostPopularResult)(nil), "nyt.MostPopularResult")
	proto.RegisterType((*Media)(nil), "nyt.Media")
	proto.RegisterType((*MediaMetadata)(nil), "nyt.MediaMetadata")
}

var fileDescriptor0 = []byte{
	// 382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x92, 0x5d, 0x6e, 0xd3, 0x40,
	0x10, 0x80, 0x95, 0x38, 0x3f, 0xcd, 0x24, 0x0e, 0xd4, 0x45, 0xd5, 0xf2, 0x82, 0xaa, 0xbc, 0x50,
	0xf1, 0x90, 0x4a, 0x70, 0x0c, 0x54, 0x09, 0x71, 0x01, 0x6b, 0x6d, 0x0f, 0x64, 0xc5, 0xda, 0xbb,
	0xda, 0x99, 0x6d, 0xea, 0x13, 0x70, 0x6d, 0xd6, 0xe3, 0xba, 0x28, 0xea, 0x9b, 0xe7, 0x1b, 0x7b,
	0xbe, 0xf9, 0x31, 0x7c, 0xc2, 0x67, 0xdd, 0x7a, 0x8b, 0xf4, 0xd0, 0xf5, 0xfc, 0xd0, 0x3a, 0x62,
	0xef, 0x7c, 0xb4, 0x3a, 0x1c, 0x7d, 0x70, 0xec, 0x8a, 0x2c, 0xe1, 0xc3, 0x13, 0xdc, 0x3c, 0xa6,
	0xcc, 0x8f, 0x31, 0xf3, 0x13, 0xc9, 0xbb, 0x8e, 0xb0, 0xd8, 0xc3, 0x8a, 0x58, 0x73, 0x24, 0x35,
	0xbb, 0x9b, 0xdd, 0x6f, 0x8a, 0x6b, 0xd8, 0xd4, 0xce, 0xf7, 0xc1, 0xfc, 0x3e, 0xb1, 0x9a, 0x0b,
	0xba, 0x81, 0x6d, 0x17, 0xdb, 0x32, 0x20, 0x45, 0xcb, 0xa4, 0xb2, 0x04, 0xf3, 0xe2, 0x33, 0xac,
	0x27, 0xb0, 0xb8, 0xcb, 0xee, 0xb7, 0x5f, 0x6f, 0x8f, 0xc9, 0x72, 0xbc, 0x54, 0xa4, 0xf4, 0xe1,
	0xef, 0x1c, 0xae, 0xdf, 0xd0, 0x62, 0x0b, 0x59, 0x0c, 0xf6, 0xc5, 0x09, 0x30, 0x37, 0x8d, 0xc8,
	0x16, 0x83, 0x5f, 0x13, 0x11, 0x72, 0x99, 0x50, 0x26, 0xe8, 0x03, 0xec, 0x74, 0xf3, 0x5c, 0xfe,
	0xc1, 0xfe, 0xec, 0x42, 0x33, 0xf8, 0x86, 0x8f, 0x52, 0xe3, 0xb5, 0xb3, 0xb1, 0xed, 0xd4, 0x52,
	0xe2, 0x77, 0xb0, 0x26, 0xac, 0xd9, 0xb8, 0x4e, 0xad, 0xa6, 0x17, 0xaa, 0xde, 0x9a, 0x0e, 0xd5,
	0x5a, 0xe2, 0x1d, 0x2c, 0xb8, 0xf7, 0xa8, 0xae, 0x24, 0xca, 0x61, 0xc9, 0x86, 0x2d, 0xaa, 0x8d,
	0x84, 0xef, 0xe1, 0x4a, 0x57, 0xc4, 0x41, 0xd7, 0xac, 0x40, 0xc8, 0x2d, 0xec, 0x7d, 0xac, 0xac,
	0xa1, 0x13, 0x36, 0x65, 0xa3, 0x19, 0xd5, 0x76, 0x2a, 0x4b, 0x2e, 0x86, 0x1a, 0xd5, 0x6e, 0x2a,
	0xf4, 0x64, 0xf0, 0x4c, 0x2a, 0x97, 0xbd, 0x7c, 0x84, 0x65, 0x8b, 0x8d, 0xd1, 0x6a, 0x2f, 0x5b,
	0x81, 0x71, 0x2b, 0x03, 0x49, 0x17, 0x58, 0xca, 0xc3, 0x6b, 0x27, 0xb3, 0xd7, 0xc6, 0x63, 0x25,
	0x60, 0x3e, 0x81, 0x5a, 0x7b, 0x99, 0x24, 0x7b, 0x7b, 0x93, 0x71, 0xfa, 0x2f, 0xb0, 0x17, 0x4d,
	0xd9, 0x22, 0xeb, 0xd4, 0x9d, 0x4e, 0x5b, 0x18, 0x7c, 0xc5, 0x7f, 0xdf, 0xe3, 0x4b, 0xe6, 0xf0,
	0x1d, 0xf2, 0x0b, 0x70, 0xb9, 0xfc, 0x34, 0xcf, 0x2f, 0x17, 0x5a, 0x3d, 0x5d, 0x3b, 0xc5, 0x27,
	0x14, 0xd3, 0x78, 0xe8, 0x34, 0xdf, 0xd9, 0x34, 0x7c, 0x12, 0x71, 0x5e, 0xad, 0xe4, 0x97, 0xfa,
	0xf6, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xf4, 0xbf, 0x77, 0x1f, 0x74, 0x02, 0x00, 0x00,
}
